### ZEROTIER ###

docker exec -it utils_zerotier_1 zerotier-cli info (Verifica se esta ok)
docker exec -it utils_zerotier_1 zerotier-cli join xxxxxid (Entra na rede)
docker exec -it utils_zerotier_1 zerotier-cli get xxxxxid ip (Verifica o IP)

### ZEROTIER ###

### PIHOLE ###

O `systemd-resolved` est√° ocupando a porta **53**, impedindo que o Pi-hole inicie corretamente. Para resolver isso, voc√™ precisa desativar ou reconfigurar o `systemd-resolved`.  

---

### üî• **1. Desativar o `systemd-resolved` (Recomendado para uso com Pi-hole)**
Se voc√™ quer que **somente o Pi-hole cuide do DNS**, desative o `systemd-resolved`:  

```bash
sudo systemctl stop systemd-resolved
sudo systemctl disable systemd-resolved
```

Agora, remova o link simb√≥lico do `resolv.conf`:
```bash
sudo rm /etc/resolv.conf
```

E crie um novo `resolv.conf` apontando para um DNS externo (exemplo: Cloudflare):
```bash
echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
```

Agora reinicie o Pi-hole:
```bash
docker restart pihole
```

Verifique se est√° rodando:
```bash
docker logs pihole | tail -20
```

---

### üõ† **2. Alterar a porta do `systemd-resolved` (Se n√£o quiser desativ√°-lo)**
Se voc√™ precisa do `systemd-resolved`, pode configur√°-lo para n√£o usar a porta 53:

Abra o arquivo de configura√ß√£o:
```bash
sudo nano /etc/systemd/resolved.conf
```
Encontre a linha:
```
#DNSStubListener=yes
```
Mude para:
```
DNSStubListener=no
```
Salve (`CTRL + X`, `Y`, `Enter`) e reinicie o servi√ßo:
```bash
sudo systemctl restart systemd-resolved
```
Agora reinicie o Pi-hole:
```bash
docker restart pihole
```

---

### üöÄ **3. Testar o DNS**
Para verificar se o Pi-hole est√° funcionando como servidor DNS, use:
```bash
nslookup google.com 127.0.0.1
```
Se o Pi-hole estiver rodando corretamente, ele responder√° √† consulta.

### PIHOLE ###